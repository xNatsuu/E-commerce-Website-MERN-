{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrim\\\\OneDrive\\\\Desktop\\\\MERN PROJECT\\\\frontend\\\\src\\\\component\\\\Order\\\\MyOrders.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport \"./myOrders.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { clearErrors, myOrders } from \"../../actions/orderAction\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Typography } from \"@mui/material\";\nimport MetaData from \"../layout/MetaData\";\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport { useParams } from \"react-router-dom\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyOrders = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const alert = useAlert();\n  onst[(searchParams, setSearchParams)] = useSearchParams();\n  const {\n    loading,\n    error,\n    orders\n  } = useSelector(state => state.myOrders);\n  const {\n    user\n  } = useSelector(state => state.user);\n  const columns = [{\n    field: \"id\",\n    headerName: \"Order ID\",\n    minWidth: 300,\n    flex: 1\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    minWidth: 150,\n    flex: 0.5,\n    cellClassName: () => {\n      return searparams.getValue({\n        id\n      }, \"status\") === \"Delivered\" ? \"greenColor\" : \"redColor\";\n    }\n  }, {\n    field: \"itemsQty\",\n    headerName: \"Items Qty\",\n    type: \"number\",\n    minWidth: 150,\n    flex: 0.3\n  }, {\n    field: \"amount\",\n    headerName: \"Amount\",\n    type: \"number\",\n    minWidth: 270,\n    flex: 0.5\n  }, {\n    field: \"actions\",\n    flex: 0.3,\n    headerName: \"Actions\",\n    minWidth: 150,\n    type: \"number\",\n    sortable: false,\n    renderCell: () => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/order/64aebec8262f8a31ef4e5aa3\",\n        children: /*#__PURE__*/_jsxDEV(LaunchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this);\n    }\n  }];\n  const rows = [];\n  orders && orders.forEach((item, index) => {\n    rows.push({\n      itemsQty: item.orderItems.length,\n      id: item._id,\n      status: item.orderStatus,\n      amount: item.totalPrice\n    });\n  });\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    dispatch(myOrders());\n  }, [dispatch, alert, error]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: `${user.name} - Orders`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myOrdersPage\",\n      children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 10,\n        disableSelectionOnClick: true,\n        className: \"myOrdersTable\",\n        autoHeight: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        id: \"myOrdersHeading\",\n        children: [user.name, \"'s Orders\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this);\n};\n_s(MyOrders, \"TOuuuykSio/S9PkngbMEKZIeJv8=\", false, function () {\n  return [useDispatch, useParams, useAlert, useSearchParams, useSelector, useSelector];\n});\n_c = MyOrders;\nexport default MyOrders;\nvar _c;\n$RefreshReg$(_c, \"MyOrders\");","map":{"version":3,"names":["React","Fragment","useEffect","DataGrid","useSelector","useDispatch","clearErrors","myOrders","Loader","Link","useAlert","Typography","MetaData","LaunchIcon","useParams","useSearchParams","jsxDEV","_jsxDEV","MyOrders","_s","dispatch","id","alert","onst","searchParams","setSearchParams","loading","error","orders","state","user","columns","field","headerName","minWidth","flex","cellClassName","searparams","getValue","type","sortable","renderCell","to","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","forEach","item","index","push","itemsQty","orderItems","length","_id","status","orderStatus","amount","totalPrice","title","name","className","pageSize","disableSelectionOnClick","autoHeight","_c","$RefreshReg$"],"sources":["C:/Users/shrim/OneDrive/Desktop/MERN PROJECT/frontend/src/component/Order/MyOrders.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport \"./myOrders.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { clearErrors, myOrders } from \"../../actions/orderAction\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Typography } from \"@mui/material\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport LaunchIcon from '@mui/icons-material/Launch';\r\nimport { useParams } from \"react-router-dom\";\r\nimport {useSearchParams} from \"react-router-dom\";\r\nconst MyOrders = () => {\r\n    const dispatch = useDispatch();\r\nconst {id} =useParams();\r\n    const alert = useAlert();\r\n    onst [searchParams, setSearchParams] = useSearchParams();\r\n    const { loading, error, orders } = useSelector((state) => state.myOrders);\r\n    const { user } = useSelector((state) => state.user);\r\n  \r\n    const columns = [\r\n      { field: \"id\", headerName: \"Order ID\", minWidth: 300, flex: 1 },\r\n  \r\n      {\r\n        field: \"status\",\r\n        headerName: \"Status\",\r\n        minWidth: 150,\r\n        flex: 0.5,\r\n        cellClassName: () => {\r\n          return searparams.getValue({id}, \"status\") === \"Delivered\"\r\n            ? \"greenColor\"\r\n            : \"redColor\";\r\n        },\r\n      },\r\n      {\r\n        field: \"itemsQty\",\r\n        headerName: \"Items Qty\",\r\n        type: \"number\",\r\n        minWidth: 150,\r\n        flex: 0.3,\r\n      },\r\n  \r\n      {\r\n        field: \"amount\",\r\n        headerName: \"Amount\",\r\n        type: \"number\",\r\n        minWidth: 270,\r\n        flex: 0.5,\r\n      },\r\n  \r\n      {\r\n        field: \"actions\",\r\n        flex: 0.3,\r\n        headerName: \"Actions\",\r\n        minWidth: 150,\r\n        type: \"number\",\r\n        sortable: false,\r\n        renderCell: () => {\r\n          return (\r\n            <Link to=\"/order/64aebec8262f8a31ef4e5aa3\">\r\n              <LaunchIcon />\r\n            </Link>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    const rows = [];\r\n  \r\n    orders &&\r\n      orders.forEach((item, index) => {\r\n        rows.push({\r\n          itemsQty: item.orderItems.length,\r\n          id: item._id,\r\n          status: item.orderStatus,\r\n          amount: item.totalPrice,\r\n        });\r\n      });\r\n  \r\n    useEffect(() => {\r\n      if (error) {\r\n        alert.error(error);\r\n        dispatch(clearErrors());\r\n      }\r\n  \r\n      dispatch(myOrders());\r\n    }, [dispatch, alert, error]);\r\n  \r\n    return (\r\n      <Fragment>\r\n        <MetaData title={`${user.name} - Orders`} />\r\n  \r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div className=\"myOrdersPage\">\r\n            <DataGrid\r\n              rows={rows}\r\n              columns={columns}\r\n              pageSize={10}\r\n              disableSelectionOnClick\r\n              className=\"myOrdersTable\"\r\n              autoHeight\r\n            />\r\n  \r\n            <Typography id=\"myOrdersHeading\">{user.name}'s Orders</Typography>\r\n          </div>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  };\r\n  \r\n  export default MyOrders;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}