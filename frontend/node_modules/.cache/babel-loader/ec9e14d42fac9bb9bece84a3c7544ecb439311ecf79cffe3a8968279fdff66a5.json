{"ast":null,"code":"import { CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, CREATE_ORDER_FAIL, MY_ORDERS_REQUEST, MY_ORDERS_SUCCESS, MY_ORDERS_FAIL,\n// ALL_ORDERS_REQUEST,\n// ALL_ORDERS_SUCCESS,\n// ALL_ORDERS_FAIL,\n// UPDATE_ORDER_REQUEST,\n// UPDATE_ORDER_SUCCESS,\n// UPDATE_ORDER_FAIL,\n// DELETE_ORDER_REQUEST,\n// DELETE_ORDER_SUCCESS,\n// DELETE_ORDER_FAIL,\n// ORDER_DETAILS_REQUEST,\n// ORDER_DETAILS_SUCCESS,\n// ORDER_DETAILS_FAIL,\nCLEAR_ERRORS } from \"../constants/orderConstants\";\nimport axios from \"axios\";\n\n// Create Order\nexport const createOrder = order => async dispatch => {\n  try {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/v1/order/new\", order, config);\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// My Orders\nexport const myOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: MY_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/orders/me\");\n    dispatch({\n      type: MY_ORDERS_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// // Get All Orders (admin)\n// export const getAllOrders = () => async (dispatch) => {\n//   try {\n//     dispatch({ type: ALL_ORDERS_REQUEST });\n\n//     const { data } = await axios.get(\"/api/v1/admin/orders\");\n\n//     dispatch({ type: ALL_ORDERS_SUCCESS, payload: data.orders });\n//   } catch (error) {\n//     dispatch({\n//       type: ALL_ORDERS_FAIL,\n//       payload: error.response.data.message,\n//     });\n//   }\n// };\n\n// // Update Order\n// export const updateOrder = (id, order) => async (dispatch) => {\n//   try {\n//     dispatch({ type: UPDATE_ORDER_REQUEST });\n\n//     const config = {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//     };\n//     const { data } = await axios.put(\n//       `/api/v1/admin/order/${id}`,\n//       order,\n//       config\n//     );\n\n//     dispatch({ type: UPDATE_ORDER_SUCCESS, payload: data.success });\n//   } catch (error) {\n//     dispatch({\n//       type: UPDATE_ORDER_FAIL,\n//       payload: error.response.data.message,\n//     });\n//   }\n// };\n\n// // Delete Order\n// export const deleteOrder = (id) => async (dispatch) => {\n//   try {\n//     dispatch({ type: DELETE_ORDER_REQUEST });\n\n//     const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\n\n//     dispatch({ type: DELETE_ORDER_SUCCESS, payload: data.success });\n//   } catch (error) {\n//     dispatch({\n//       type: DELETE_ORDER_FAIL,\n//       payload: error.response.data.message,\n//     });\n//   }\n// };\n\n// // Get Order Details\n// export const getOrderDetails = (id) => async (dispatch) => {\n//   try {\n//     dispatch({ type: ORDER_DETAILS_REQUEST });\n\n//     const { data } = await axios.get(`/api/v1/order/${id}`);\n\n//     dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data.order });\n//   } catch (error) {\n//     dispatch({\n//       type: ORDER_DETAILS_FAIL,\n//       payload: error.response.data.message,\n//     });\n//   }\n// };\n\n// Clearing Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","CLEAR_ERRORS","axios","createOrder","order","dispatch","type","config","headers","data","post","payload","error","response","message","myOrders","get","orders","clearErrors"],"sources":["C:/Users/shrim/OneDrive/Desktop/MERN PROJECT/frontend/src/actions/orderAction.js"],"sourcesContent":["import {\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  CREATE_ORDER_FAIL,\r\n  MY_ORDERS_REQUEST,\r\n  MY_ORDERS_SUCCESS,\r\n  MY_ORDERS_FAIL,\r\n  // ALL_ORDERS_REQUEST,\r\n  // ALL_ORDERS_SUCCESS,\r\n  // ALL_ORDERS_FAIL,\r\n  // UPDATE_ORDER_REQUEST,\r\n  // UPDATE_ORDER_SUCCESS,\r\n  // UPDATE_ORDER_FAIL,\r\n  // DELETE_ORDER_REQUEST,\r\n  // DELETE_ORDER_SUCCESS,\r\n  // DELETE_ORDER_FAIL,\r\n  // ORDER_DETAILS_REQUEST,\r\n  // ORDER_DETAILS_SUCCESS,\r\n  // ORDER_DETAILS_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/orderConstants\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// Create Order\r\nexport const createOrder = (order) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CREATE_ORDER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\"/api/v1/order/new\", order, config);\r\n\r\n    dispatch({ type: CREATE_ORDER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// My Orders\r\nexport const myOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MY_ORDERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/orders/me\");\r\n\r\n    dispatch({ type: MY_ORDERS_SUCCESS, payload: data.orders });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MY_ORDERS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// // Get All Orders (admin)\r\n// export const getAllOrders = () => async (dispatch) => {\r\n//   try {\r\n//     dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n//     const { data } = await axios.get(\"/api/v1/admin/orders\");\r\n\r\n//     dispatch({ type: ALL_ORDERS_SUCCESS, payload: data.orders });\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: ALL_ORDERS_FAIL,\r\n//       payload: error.response.data.message,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// // Update Order\r\n// export const updateOrder = (id, order) => async (dispatch) => {\r\n//   try {\r\n//     dispatch({ type: UPDATE_ORDER_REQUEST });\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//     };\r\n//     const { data } = await axios.put(\r\n//       `/api/v1/admin/order/${id}`,\r\n//       order,\r\n//       config\r\n//     );\r\n\r\n//     dispatch({ type: UPDATE_ORDER_SUCCESS, payload: data.success });\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: UPDATE_ORDER_FAIL,\r\n//       payload: error.response.data.message,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// // Delete Order\r\n// export const deleteOrder = (id) => async (dispatch) => {\r\n//   try {\r\n//     dispatch({ type: DELETE_ORDER_REQUEST });\r\n\r\n//     const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\r\n\r\n//     dispatch({ type: DELETE_ORDER_SUCCESS, payload: data.success });\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: DELETE_ORDER_FAIL,\r\n//       payload: error.response.data.message,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// // Get Order Details\r\n// export const getOrderDetails = (id) => async (dispatch) => {\r\n//   try {\r\n//     dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n//     const { data } = await axios.get(`/api/v1/order/${id}`);\r\n\r\n//     dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data.order });\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: ORDER_DETAILS_FAIL,\r\n//       payload: error.response.data.message,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// Clearing Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};"],"mappings":"AAAA,SACEA,oBAAoB,EACpBC,oBAAoB,EACpBC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,YAAY,QACP,6BAA6B;AAEpC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,WAAW,GAAIC,KAAK,IAAK,MAAOC,QAAQ,IAAK;EACxD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEX;IAAqB,CAAC,CAAC;IAExC,MAAMY,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IACD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,mBAAmB,EAAEN,KAAK,EAAEG,MAAM,CAAC;IAErEF,QAAQ,CAAC;MAAEC,IAAI,EAAEV,oBAAoB;MAAEe,OAAO,EAAEF;IAAK,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdP,QAAQ,CAAC;MACPC,IAAI,EAAET,iBAAiB;MACvBc,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM,MAAOV,QAAQ,IAAK;EAChD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAER;IAAkB,CAAC,CAAC;IAErC,MAAM;MAAEW;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACc,GAAG,CAAC,mBAAmB,CAAC;IAErDX,QAAQ,CAAC;MAAEC,IAAI,EAAEP,iBAAiB;MAAEY,OAAO,EAAEF,IAAI,CAACQ;IAAO,CAAC,CAAC;EAC7D,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdP,QAAQ,CAAC;MACPC,IAAI,EAAEN,cAAc;MACpBW,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,MAAMI,WAAW,GAAGA,CAAA,KAAM,MAAOb,QAAQ,IAAK;EACnDA,QAAQ,CAAC;IAAEC,IAAI,EAAEL;EAAa,CAAC,CAAC;AAClC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}