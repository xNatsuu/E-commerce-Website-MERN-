{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrim\\\\OneDrive\\\\Desktop\\\\MERN PROJECT\\\\frontend\\\\src\\\\component\\\\admin\\\\OrderList.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport \"./productList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport Button from '@mui/material/Button';\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SideBar from \"./Sidebar\";\nimport { deleteOrder, getAllOrders, clearErrors } from \"../../actions/orderAction\";\nimport { DELETE_ORDER_RESET } from \"../../constants/orderConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    error,\n    orders\n  } = useSelector(state => state.allOrders);\n  const {\n    error: deleteError,\n    isDeleted\n  } = useSelector(state => state.order);\n  let params = useParams();\n  const deleteOrderHandler = id => {\n    dispatch(deleteOrder(id));\n  };\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n    if (isDeleted) {\n      alert.success(\"Order Deleted Successfully\");\n      history.push(\"/admin/orders\");\n      dispatch({\n        type: DELETE_ORDER_RESET\n      });\n    }\n    dispatch(getAllOrders());\n  }, [dispatch, alert, error, deleteError, history, isDeleted]);\n  const columns = [{\n    field: \"id\",\n    headerName: \"Order ID\",\n    minWidth: 300,\n    flex: 1\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    minWidth: 150,\n    flex: 0.5,\n    cellClassName: params => {\n      return (params.row.id, \"status\") === \"Delivered\" ? \"greenColor\" : \"redColor\";\n    }\n  }, {\n    field: \"itemsQty\",\n    headerName: \"Items Qty\",\n    type: \"number\",\n    minWidth: 150,\n    flex: 0.4\n  }, {\n    field: \"amount\",\n    headerName: \"Amount\",\n    type: \"number\",\n    minWidth: 270,\n    flex: 0.5\n  }, {\n    field: \"actions\",\n    flex: 0.3,\n    headerName: \"Actions\",\n    minWidth: 150,\n    type: \"number\",\n    sortable: false,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/admin/order/${params.row.id}`,\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => deleteOrderHandler(params.row.id),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const rows = [];\n  orders && orders.forEach(item => {\n    rows.push({\n      id: item._id,\n      itemsQty: item.orderItems.length,\n      amount: item.totalPrice,\n      status: item.orderStatus\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: `ALL ORDERS - Admin`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"productListHeading\",\n          children: \"ALL ORDERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows,\n          columns: columns,\n          pageSize: 10,\n          disableSelectionOnClick: true,\n          className: \"productListTable\",\n          autoHeight: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderList, \"1CznDMPXjMrbEIrAPgdhgsx/Q5k=\", false, function () {\n  return [useDispatch, useAlert, useSelector, useSelector, useParams];\n});\n_c = OrderList;\nexport default OrderList;\nvar _c;\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"names":["React","Fragment","useEffect","DataGrid","useSelector","useDispatch","Link","useParams","useAlert","Button","MetaData","EditIcon","DeleteIcon","SideBar","deleteOrder","getAllOrders","clearErrors","DELETE_ORDER_RESET","jsxDEV","_jsxDEV","OrderList","_s","dispatch","alert","error","orders","state","allOrders","deleteError","isDeleted","order","params","deleteOrderHandler","id","success","history","push","type","columns","field","headerName","minWidth","flex","cellClassName","row","sortable","renderCell","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","rows","forEach","item","_id","itemsQty","orderItems","length","amount","totalPrice","status","orderStatus","title","className","pageSize","disableSelectionOnClick","autoHeight","_c","$RefreshReg$"],"sources":["C:/Users/shrim/OneDrive/Desktop/MERN PROJECT/frontend/src/component/admin/OrderList.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport \"./productList.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Button from '@mui/material/Button';\r\nimport MetaData from \"../layout/MetaData\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport SideBar from \"./Sidebar\";\r\nimport {\r\n  deleteOrder,\r\n  getAllOrders,\r\n  clearErrors,\r\n} from \"../../actions/orderAction\";\r\nimport { DELETE_ORDER_RESET } from \"../../constants/orderConstants\";\r\n\r\nconst OrderList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const alert = useAlert();\r\n\r\n  const { error, orders } = useSelector((state) => state.allOrders);\r\n\r\n  const { error: deleteError, isDeleted } = useSelector((state) => state.order);\r\n\r\n  let params = useParams()\r\n  const deleteOrderHandler = (id) => {\r\n    dispatch(deleteOrder(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isDeleted) {\r\n      alert.success(\"Order Deleted Successfully\");\r\n      history.push(\"/admin/orders\");\r\n      dispatch({ type: DELETE_ORDER_RESET });\r\n    }\r\n\r\n    dispatch(getAllOrders());\r\n  }, [dispatch, alert, error, deleteError, history, isDeleted]);\r\n\r\n \r\n  const columns = [\r\n    { field: \"id\", headerName: \"Order ID\", minWidth: 300, flex: 1 },\r\n\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 150,\r\n      flex: 0.5,\r\n      cellClassName: (params) => {\r\n        return (params.row.id, \"status\") \r\n        === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Items Qty\",\r\n      type: \"number\",\r\n      minWidth: 150,\r\n      flex: 0.4,\r\n    },\r\n\r\n    {\r\n      field: \"amount\",\r\n      headerName: \"Amount\",\r\n      type: \"number\",\r\n      minWidth: 270,\r\n      flex: 0.5,\r\n    },\r\n\r\n    {\r\n      field: \"actions\",\r\n      flex: 0.3,\r\n      headerName: \"Actions\",\r\n      minWidth: 150,\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <Fragment>\r\n            <Link to={`/admin/order/${params.row.id}`}>\r\n              <EditIcon />\r\n            </Link>\r\n\r\n            <Button\r\n              onClick={() =>\r\n                deleteOrderHandler(params.row.id)\r\n              }\r\n            >\r\n              <DeleteIcon />\r\n            </Button>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const rows = [];\r\n\r\n  orders &&\r\n    orders.forEach((item) => {\r\n      rows.push({\r\n        id: item._id,\r\n        itemsQty: item.orderItems.length,\r\n        amount: item.totalPrice,\r\n        status: item.orderStatus,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={`ALL ORDERS - Admin`} />\r\n\r\n      <div className=\"dashboard\">\r\n        <SideBar />\r\n        <div className=\"productListContainer\">\r\n          <h1 id=\"productListHeading\">ALL ORDERS</h1>\r\n\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            className=\"productListTable\"\r\n            autoHeight\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default OrderList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}