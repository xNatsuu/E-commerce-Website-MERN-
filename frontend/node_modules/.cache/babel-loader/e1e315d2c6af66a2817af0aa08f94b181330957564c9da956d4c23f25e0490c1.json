{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrim\\\\OneDrive\\\\Desktop\\\\MERN PROJECT\\\\frontend\\\\src\\\\component\\\\Route\\\\ProtectedRoute.js\";\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Protected = () => {\n  const auth = null; // determine if authorized, from context or however you're doing it\n\n  // If authorized, return an outlet that will render child elements\n  // If not, return element that will navigate to login page\n  return auth ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 19\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 32\n  }, this);\n};\n_c = Protected;\nexport default ProtectedRoute;\n// <Fragment>\n//   {loading === false && (\n//     <Route\n//       {...rest}\n//       render={(props) => {\n//         if (isAuthenticated === false) {\n//           return <Navigate to=\"/login\" />;\n//         }\n\n//         if (isAdmin === true && user.role !== \"admin\") {\n//           return <Navigate to=\"/login\" />;\n//         }\n\n//         return <Component {...props} />;\n//       }}\n//     />\n//   )}\n// </Fragment>\nvar _c;\n$RefreshReg$(_c, \"Protected\");","map":{"version":3,"names":["React","Navigate","Outlet","jsxDEV","_jsxDEV","Protected","auth","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","ProtectedRoute","$RefreshReg$"],"sources":["C:/Users/shrim/OneDrive/Desktop/MERN PROJECT/frontend/src/component/Route/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\n\r\nconst Protected = () => {\r\n    const auth = null; // determine if authorized, from context or however you're doing it\r\n\r\n    // If authorized, return an outlet that will render child elements\r\n    // If not, return element that will navigate to login page\r\n    return auth ? <Outlet /> : <Navigate to=\"/login\" />;\r\n}\r\n\r\nexport default ProtectedRoute;\r\n    // <Fragment>\r\n    //   {loading === false && (\r\n    //     <Route\r\n    //       {...rest}\r\n    //       render={(props) => {\r\n    //         if (isAuthenticated === false) {\r\n    //           return <Navigate to=\"/login\" />;\r\n    //         }\r\n\r\n    //         if (isAdmin === true && user.role !== \"admin\") {\r\n    //           return <Navigate to=\"/login\" />;\r\n    //         }\r\n\r\n    //         return <Component {...props} />;\r\n    //       }}\r\n    //     />\r\n    //   )}\r\n    // </Fragment>"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACpB,MAAMC,IAAI,GAAG,IAAI,CAAC,CAAC;;EAEnB;EACA;EACA,OAAOA,IAAI,gBAAGF,OAAA,CAACF,MAAM;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGN,OAAA,CAACH,QAAQ;IAACU,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvD,CAAC;AAAAE,EAAA,GANKP,SAAS;AAQf,eAAeQ,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}