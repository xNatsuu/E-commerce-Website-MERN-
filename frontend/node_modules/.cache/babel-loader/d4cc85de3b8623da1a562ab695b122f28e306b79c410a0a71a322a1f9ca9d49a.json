{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrim\\\\OneDrive\\\\Desktop\\\\MERN PROJECT\\\\frontend\\\\src\\\\component\\\\Order\\\\MyOrders.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport \"./myOrders.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { clearErrors, myOrders } from \"../../actions/orderAction\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Typography } from \"@mui/material\";\nimport MetaData from \"../layout/MetaData\";\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyOrders = () => {\n  _s();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    loading,\n    error,\n    orders\n  } = useSelector(state => state.myOrders);\n  const {\n    user\n  } = useSelector(state => state.user);\n  const {\n    id\n  } = useParams();\n  const columns = [{\n    field: \"id\",\n    headerName: \"Order ID\",\n    minWidth: 300,\n    flex: 1\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    minWidth: 150,\n    flex: 0.5,\n    cellClassName: () => {\n      return (id, \"status\") === \"Delivered\" ? \"greenColor\" : \"redColor\";\n    }\n  }, {\n    field: \"itemsQty\",\n    headerName: \"Items Qty\",\n    type: \"number\",\n    minWidth: 150,\n    flex: 0.3\n  }, {\n    field: \"amount\",\n    headerName: \"Amount\",\n    type: \"number\",\n    minWidth: 270,\n    flex: 0.5\n  }, {\n    field: \"actions\",\n    flex: 0.3,\n    headerName: \"Actions\",\n    minWidth: 150,\n    type: \"number\",\n    sortable: false,\n    renderCell: () => {\n      try {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/order/${orders._id}`,\n          children: /*#__PURE__*/_jsxDEV(LaunchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      } catch (e) {\n        console.log(\"Error in actions column:\", e);\n      }\n      clh;\n    }\n  }];\n  const rows = [];\n  orders && orders.forEach((item, index) => {\n    rows.push({\n      itemsQty: item.orderItems.length,\n      id: item._id,\n      status: item.orderStatus,\n      amount: item.totalPrice\n    });\n  });\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    dispatch(myOrders());\n  }, [dispatch, alert, error]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: `${user.name} - Orders`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myOrdersPage\",\n      children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 10,\n        disableSelectionOnClick: true,\n        className: \"myOrdersTable\",\n        autoHeight: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        id: \"myOrdersHeading\",\n        children: [user.name, \"'s Orders\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this);\n};\n_s(MyOrders, \"iXaHQ7Fem2KHZzyPDUGNEE//1e0=\", false, function () {\n  return [useDispatch, useAlert, useSelector, useSelector, useParams];\n});\n_c = MyOrders;\nexport default MyOrders;\nvar _c;\n$RefreshReg$(_c, \"MyOrders\");","map":{"version":3,"names":["React","Fragment","useEffect","DataGrid","useSelector","useDispatch","clearErrors","myOrders","Loader","Link","useAlert","Typography","MetaData","LaunchIcon","useParams","jsxDEV","_jsxDEV","MyOrders","_s","dispatch","alert","loading","error","orders","state","user","id","columns","field","headerName","minWidth","flex","cellClassName","type","sortable","renderCell","to","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","e","console","log","clh","rows","forEach","item","index","push","itemsQty","orderItems","length","status","orderStatus","amount","totalPrice","title","name","className","pageSize","disableSelectionOnClick","autoHeight","_c","$RefreshReg$"],"sources":["C:/Users/shrim/OneDrive/Desktop/MERN PROJECT/frontend/src/component/Order/MyOrders.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport \"./myOrders.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { clearErrors, myOrders } from \"../../actions/orderAction\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Typography } from \"@mui/material\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport LaunchIcon from '@mui/icons-material/Launch';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst MyOrders = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const alert = useAlert();\r\n  \r\n    const { loading, error, orders } = useSelector((state) => state.myOrders);\r\n    const { user } = useSelector((state) => state.user);\r\n  \r\n\r\n    const {id} =useParams();\r\n    const columns = [\r\n      { field: \"id\", headerName: \"Order ID\", minWidth: 300, flex: 1 },\r\n  \r\n      {\r\n        field: \"status\",\r\n        headerName: \"Status\",\r\n        minWidth: 150,\r\n        flex: 0.5,\r\n        cellClassName: () => {\r\n            return (id,\"status\")=== \"Delivered\"\r\n              ? \"greenColor\"\r\n              : \"redColor\";\r\n          },\r\n      },\r\n      {\r\n        field: \"itemsQty\",\r\n        headerName: \"Items Qty\",\r\n        type: \"number\",\r\n        minWidth: 150,\r\n        flex: 0.3,\r\n      },\r\n  \r\n      {\r\n        field: \"amount\",\r\n        headerName: \"Amount\",\r\n        type: \"number\",\r\n        minWidth: 270,\r\n        flex: 0.5,\r\n      },\r\n  \r\n      {\r\n        field: \"actions\",\r\n        flex: 0.3,\r\n        headerName: \"Actions\",\r\n        minWidth: 150,\r\n        type: \"number\",\r\n        sortable: false,\r\n        renderCell: () => {\r\n          try{\r\n          return (\r\n            <Link to={`/order/${orders._id}`}>\r\n              <LaunchIcon />\r\n            </Link>\r\n          );\r\n          }catch(e){console.log(\"Error in actions column:\", e)} \r\n          clh\r\n        },\r\n      },\r\n    ];\r\n    const rows = [];\r\n  \r\n    orders &&\r\n      orders.forEach((item, index) => {\r\n        rows.push({\r\n          itemsQty: item.orderItems.length,\r\n          id: item._id,\r\n          status: item.orderStatus,\r\n          amount: item.totalPrice,\r\n        });\r\n      });\r\n  \r\n    useEffect(() => {\r\n      if (error) {\r\n        alert.error(error);\r\n        dispatch(clearErrors());\r\n      }\r\n  \r\n      dispatch(myOrders());\r\n    }, [dispatch, alert, error]);\r\n  \r\n    return (\r\n      <Fragment>\r\n        <MetaData title={`${user.name} - Orders`} />\r\n  \r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div className=\"myOrdersPage\">\r\n            <DataGrid\r\n              rows={rows}\r\n              columns={columns}\r\n              pageSize={10}\r\n              disableSelectionOnClick\r\n              className=\"myOrdersTable\"\r\n              autoHeight\r\n            />\r\n  \r\n            <Typography id=\"myOrdersHeading\">{user.name}'s Orders</Typography>\r\n          </div>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  };\r\n  \r\n  export default MyOrders;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}