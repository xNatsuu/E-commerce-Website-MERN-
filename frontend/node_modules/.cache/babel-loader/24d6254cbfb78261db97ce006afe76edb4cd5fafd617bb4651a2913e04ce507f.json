{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"anchorOrigin\", \"classes\", \"badgeContent\", \"component\", \"children\", \"className\", \"components\", \"componentsProps\", \"invisible\", \"max\", \"overlap\", \"showZero\", \"variant\", \"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, usePreviousProps } from '@mui/utils';\nimport isHostComponent from '../utils/isHostComponent';\nimport composeClasses from '../composeClasses';\nimport { getBadgeUtilityClass } from './badgeUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    anchorOrigin,\n    overlap,\n    invisible,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      classes: classesProp,\n      badgeContent: badgeContentProp,\n      component = 'span',\n      children,\n      className,\n      components = {},\n      componentsProps = {},\n      invisible: invisibleProp,\n      max: maxProp = 99,\n      overlap: overlapProp = 'rectangular',\n      showZero = false,\n      variant: variantProp = 'standard',\n      /* eslint-disable react/prop-types */\n      theme\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    badgeContent: badgeContentProp,\n    max: maxProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp == null && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n  const {\n    anchorOrigin = anchorOriginProp,\n    badgeContent,\n    max = maxProp,\n    overlap = overlapProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    badgeContent,\n    classes: classesProp,\n    invisible,\n    max,\n    overlap,\n    variant\n  });\n  let displayValue = '';\n  if (variant !== 'dot') {\n    displayValue = badgeContent > max ? `${max}+` : badgeContent;\n  }\n  const classes = useUtilityClasses(ownerState);\n  const Root = components.Root || component;\n  const rootProps = componentsProps.root || {};\n  const Badge = components.Badge || 'span';\n  const badgeProps = componentsProps.badge || {};\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, !isHostComponent(Root) && {\n    as: component,\n    ownerState: _extends({}, ownerState, rootProps.ownerState),\n    theme\n  }, {\n    ref: ref\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className),\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, !isHostComponent(Badge) && {\n      ownerState: _extends({}, ownerState, badgeProps.ownerState),\n      theme\n    }, {\n      className: clsx(classes.badge, badgeProps.className),\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n  /**\n   * If `true`, the badge is invisible.\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default BadgeUnstyled;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","unstable_capitalize","capitalize","usePreviousProps","isHostComponent","composeClasses","getBadgeUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","variant","anchorOrigin","overlap","invisible","classes","slots","root","badge","vertical","horizontal","BadgeUnstyled","forwardRef","props","ref","anchorOriginProp","classesProp","badgeContent","badgeContentProp","component","children","className","components","componentsProps","invisibleProp","max","maxProp","overlapProp","showZero","variantProp","theme","other","prevProps","displayValue","Root","rootProps","Badge","badgeProps","as","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","node","object","string","elementType","bool","number"],"sources":["C:/Users/shrim/OneDrive/Desktop/MERN PROJECT/frontend/node_modules/@mui/core/BadgeUnstyled/BadgeUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"anchorOrigin\", \"classes\", \"badgeContent\", \"component\", \"children\", \"className\", \"components\", \"componentsProps\", \"invisible\", \"max\", \"overlap\", \"showZero\", \"variant\", \"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, usePreviousProps } from '@mui/utils';\nimport isHostComponent from '../utils/isHostComponent';\nimport composeClasses from '../composeClasses';\nimport { getBadgeUtilityClass } from './badgeUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    anchorOrigin,\n    overlap,\n    invisible,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\n\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    classes: classesProp,\n    badgeContent: badgeContentProp,\n    component = 'span',\n    children,\n    className,\n    components = {},\n    componentsProps = {},\n    invisible: invisibleProp,\n    max: maxProp = 99,\n    overlap: overlapProp = 'rectangular',\n    showZero = false,\n    variant: variantProp = 'standard',\n\n    /* eslint-disable react/prop-types */\n    theme\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    badgeContent: badgeContentProp,\n    max: maxProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp == null && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    anchorOrigin = anchorOriginProp,\n    badgeContent,\n    max = maxProp,\n    overlap = overlapProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    badgeContent,\n    classes: classesProp,\n    invisible,\n    max,\n    overlap,\n    variant\n  });\n\n  let displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent > max ? `${max}+` : badgeContent;\n  }\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = components.Root || component;\n  const rootProps = componentsProps.root || {};\n  const Badge = components.Badge || 'span';\n  const badgeProps = componentsProps.badge || {};\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, !isHostComponent(Root) && {\n    as: component,\n    ownerState: _extends({}, ownerState, rootProps.ownerState),\n    theme\n  }, {\n    ref: ref\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className),\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, !isHostComponent(Badge) && {\n      ownerState: _extends({}, ownerState, badgeProps.ownerState),\n      theme\n    }, {\n      className: clsx(classes.badge, badgeProps.className),\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * If `true`, the badge is invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default BadgeUnstyled;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}