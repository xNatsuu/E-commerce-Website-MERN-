{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrim\\\\OneDrive\\\\Desktop\\\\MERN PROJECT\\\\frontend\\\\src\\\\component\\\\Route\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { Navigate, Outlet } from \"react-router-dom\";\n\n// const ProtectedRoute = ({\n//   isAuthenticated,\n//   children,\n//   adminRoute,\n//   isAdmin,\n//   redirect = \"/login\",\n//   redirectAdmin = \"/profile\",\n// }) => {\n//   if (!isAuthenticated) {\n//     return <Navigate to={redirect} />;\n//   }\n\n//   if (adminRoute && !isAdmin) {\n//     return <Navigate to={redirectAdmin} />;\n//   }\n\n//   return children ? children : <Outlet />;\n// };\n\n// export default ProtectedRoute;\n// <Fragment>\n//   {loading === false && (\n//     <Route\n//       {...rest}\n//       render={(props) => {\n//         if (isAuthenticated === false) {\n//           return <Navigate to=\"/login\" />;\n//         }\n\n//         if (isAdmin === true && user.role !== \"admin\") {\n//           return <Navigate to=\"/login\" />;\n//         }\n\n//         return <Component {...props} />;\n//       }}\n//     />\n//   )}\n// </Fragment>\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = _ref => {\n  _s();\n  let {\n    isAdmin,\n    component: Component,\n    ...rest\n  } = _ref;\n  const {\n    loading,\n    isAuthenticated,\n    user\n  } = useSelector(state => state.user);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading === false && /*#__PURE__*/_jsxDEV(Route, {\n      ...rest,\n      render: props => {\n        if (isAuthenticated === false) {\n          return /*#__PURE__*/_jsxDEV(Navi, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 22\n          }, this);\n        }\n        if (isAdmin === true && user.role !== \"admin\") {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 22\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(Component, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ProtectedRoute, \"Is/VqZ4xfCyoEtbtOvAKpoVUv3g=\", false, function () {\n  return [useSelector];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\n//     import React from \"react\";\n// import { Navigate, Outlet } from \"react-router-dom\";\n// import { useSelector } from \"react-redux\";\n\n// const ProtectedRoute = ({\n\n//   children,\n\n//   isAdmin,\n\n// }) => {\n//   const {  isAuthenticated, user } = useSelector((state) => state.user);\n//   // const redirectAdmin = \"/profile\"\n//   if (!isAuthenticated) {\n//     return <Navigate to=\"/login\"/>;\n//   }\n\n//   if (user.role!==\"admin\" && isAdmin) {\n//     return <Navigate to=\"/account\"/>;\n//   }\n\n//   return children ? children : <Outlet />;\n// };\n\n// export default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Fragment","useSelector","Redirect","Route","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","_ref","_s","isAdmin","component","Component","rest","loading","isAuthenticated","user","state","children","render","props","Navi","to","fileName","_jsxFileName","lineNumber","columnNumber","role","_c","$RefreshReg$"],"sources":["C:/Users/shrim/OneDrive/Desktop/MERN PROJECT/frontend/src/component/Route/ProtectedRoute.js"],"sourcesContent":["// import React from \"react\";\r\n// import { Navigate, Outlet } from \"react-router-dom\";\r\n\r\n// const ProtectedRoute = ({\r\n//   isAuthenticated,\r\n//   children,\r\n//   adminRoute,\r\n//   isAdmin,\r\n//   redirect = \"/login\",\r\n//   redirectAdmin = \"/profile\",\r\n// }) => {\r\n//   if (!isAuthenticated) {\r\n//     return <Navigate to={redirect} />;\r\n//   }\r\n\r\n//   if (adminRoute && !isAdmin) {\r\n//     return <Navigate to={redirectAdmin} />;\r\n//   }\r\n\r\n//   return children ? children : <Outlet />;\r\n// };\r\n\r\n// export default ProtectedRoute;\r\n    // <Fragment>\r\n    //   {loading === false && (\r\n    //     <Route\r\n    //       {...rest}\r\n    //       render={(props) => {\r\n    //         if (isAuthenticated === false) {\r\n    //           return <Navigate to=\"/login\" />;\r\n    //         }\r\n\r\n    //         if (isAdmin === true && user.role !== \"admin\") {\r\n    //           return <Navigate to=\"/login\" />;\r\n    //         }\r\n\r\n    //         return <Component {...props} />;\r\n    //       }}\r\n    //     />\r\n    //   )}\r\n    // </Fragment>\r\n    import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\r\n  const { loading, isAuthenticated, user } = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading === false && (\r\n        <Route\r\n          {...rest}\r\n          render={(props) => {\r\n            if (isAuthenticated === false) {\r\n              return <Navi to=\"/login\" />;\r\n            }\r\n\r\n            if (isAdmin === true && user.role !== \"admin\") {\r\n              return <Redirect to=\"/login\" />;\r\n            }\r\n\r\n            return <Component {...props} />;\r\n          }}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n\r\n  //     import React from \"react\";\r\n  // import { Navigate, Outlet } from \"react-router-dom\";\r\n  // import { useSelector } from \"react-redux\";\r\n\r\n  // const ProtectedRoute = ({\r\n    \r\n  //   children,\r\n\r\n  //   isAdmin,\r\n\r\n  // }) => {\r\n  //   const {  isAuthenticated, user } = useSelector((state) => state.user);\r\n  //   // const redirectAdmin = \"/profile\"\r\n  //   if (!isAuthenticated) {\r\n  //     return <Navigate to=\"/login\"/>;\r\n  //   }\r\n\r\n  //   if (user.role!==\"admin\" && isAdmin) {\r\n  //     return <Navigate to=\"/account\"/>;\r\n  //   }\r\n\r\n  //   return children ? children : <Outlet />;\r\n  // };\r\n\r\n  // export default ProtectedRoute;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,EAAEC,KAAK,QAAQ,kBAAkB;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGC,IAAA,IAAgD;EAAAC,EAAA;EAAA,IAA/C;IAAEC,OAAO;IAAEC,SAAS,EAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC,GAAAL,IAAA;EAChE,MAAM;IAAEM,OAAO;IAAEC,eAAe;IAAEC;EAAK,CAAC,GAAGf,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACD,IAAI,CAAC;EAE7E,oBACEV,OAAA,CAACN,QAAQ;IAAAkB,QAAA,EACNJ,OAAO,KAAK,KAAK,iBAChBR,OAAA,CAACH,KAAK;MAAA,GACAU,IAAI;MACRM,MAAM,EAAGC,KAAK,IAAK;QACjB,IAAIL,eAAe,KAAK,KAAK,EAAE;UAC7B,oBAAOT,OAAA,CAACe,IAAI;YAACC,EAAE,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAC7B;QAEA,IAAIhB,OAAO,KAAK,IAAI,IAAIM,IAAI,CAACW,IAAI,KAAK,OAAO,EAAE;UAC7C,oBAAOrB,OAAA,CAACJ,QAAQ;YAACoB,EAAE,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QACjC;QAEA,oBAAOpB,OAAA,CAACM,SAAS;UAAA,GAAKQ;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MACjC;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEf,CAAC;AAACjB,EAAA,CAvBIF,cAAc;EAAA,QACyBN,WAAW;AAAA;AAAA2B,EAAA,GADlDrB,cAAc;AAyBpB,eAAeA,cAAc;;AAE3B;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}