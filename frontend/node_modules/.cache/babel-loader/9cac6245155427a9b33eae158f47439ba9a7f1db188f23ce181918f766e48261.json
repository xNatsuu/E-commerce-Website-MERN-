{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrim\\\\OneDrive\\\\Desktop\\\\MERN PROJECT\\\\frontend\\\\src\\\\component\\\\Admin\\\\ProductList.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport \"./productList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { clearErrors, getAdminProduct, deleteProduct } from \"../../actions/productAction\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport Button from '@mui/material/Button';\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SideBar from \"./sidebar.css\";\nimport { DELETE_PRODUCT_RESET } from \"../../constants/productConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = _ref => {\n  let {\n    history\n  } = _ref;\n  //   const dispatch = useDispatch();\n  // const {id}=useParams();\n  //   const alert = useAlert();\n\n  //   const { error, products } = useSelector((state) => state.products);\n\n  // //   const { error: deleteError, isDeleted } = useSelector(\n  // //     (state) => state.product\n  // //   );\n\n  // //   const deleteProductHandler = (id) => {\n  // //     dispatch(deleteProduct(id));\n  // //   };\n\n  //   useEffect(() => {\n  //     if (error) {\n  //       alert.error(error);\n  //       dispatch(clearErrors());\n  //     }\n\n  //     // if (deleteError) {\n  //     //   alert.error(deleteError);\n  //     //   dispatch(clearErrors());\n  //     // }\n\n  //     // if (isDeleted) {\n  //     //   alert.success(\"Product Deleted Successfully\");\n  //     //   history.push(\"/admin/dashboard\");\n  //     //   dispatch({ type: DELETE_PRODUCT_RESET });\n  //     // }\n\n  //     dispatch(getAdminProduct());\n  //   }, [dispatch, alert, error]);\n\n  //   const columns = [\n  //     { field: \"id\", headerName: \"Product ID\", minWidth: 200, flex: 0.5 },\n\n  //     {\n  //       field: \"name\",\n  //       headerName: \"Name\",\n  //       minWidth: 350,\n  //       flex: 1,\n  //     },\n  //     {\n  //       field: \"stock\",\n  //       headerName: \"Stock\",\n  //       type: \"number\",\n  //       minWidth: 150,\n  //       flex: 0.3,\n  //     },\n\n  //     {\n  //       field: \"price\",\n  //       headerName: \"Price\",\n  //       type: \"number\",\n  //       minWidth: 270,\n  //       flex: 0.5,\n  //     },\n\n  //     {\n  //       field: \"actions\",\n  //       flex: 0.3,\n  //       headerName: \"Actions\",\n  //       minWidth: 150,\n  //       type: \"number\",\n  //       sortable: false,\n  //       renderCell: (params) => {\n  //         return (\n  //           <Fragment>\n  //             <Link to={`/admin/product/${(params.row.id, \"id\")}`}>\n  //               <EditIcon />\n  //             </Link>\n\n  //             <Button\n  //             //   onClick={() =>\n  //             //     deleteProductHandler(params.getValue(params.id, \"id\"))\n  //             //   }\n  //             >\n  //               <DeleteIcon />\n  //             </Button>\n  //           </Fragment>\n  //         );\n  //       },\n  //     },\n  //   ];\n\n  //   const rows = [];\n\n  //   products &&\n  //     products.forEach((item) => {\n  //       rows.push({\n  //         id: item._id,\n  //         stock: item.Stock,\n  //         price: item.price,\n  //         name: item.name,\n  //       });\n  //     });\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: `ALL PRODUCTS - Admin`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"productListHeading\",\n          children: \"ALL PRODUCTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows,\n          columns: columns,\n          pageSize: 10,\n          disableSelectionOnClick: true,\n          className: \"productListTable\",\n          autoHeight: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","Fragment","useEffect","DataGrid","useSelector","useDispatch","clearErrors","getAdminProduct","deleteProduct","Link","useParams","useAlert","Button","MetaData","EditIcon","DeleteIcon","SideBar","DELETE_PRODUCT_RESET","jsxDEV","_jsxDEV","ProductList","_ref","history","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","id","rows","columns","pageSize","disableSelectionOnClick","autoHeight","_c","$RefreshReg$"],"sources":["C:/Users/shrim/OneDrive/Desktop/MERN PROJECT/frontend/src/component/Admin/ProductList.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport \"./productList.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  clearErrors,\r\n  getAdminProduct,\r\n  deleteProduct,\r\n} from \"../../actions/productAction\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Button from '@mui/material/Button';\r\nimport MetaData from \"../layout/MetaData\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport SideBar from \"./sidebar.css\";\r\nimport { DELETE_PRODUCT_RESET } from \"../../constants/productConstants\";\r\n\r\nconst ProductList = ({ history }) => {\r\n//   const dispatch = useDispatch();\r\n// const {id}=useParams();\r\n//   const alert = useAlert();\r\n\r\n//   const { error, products } = useSelector((state) => state.products);\r\n\r\n// //   const { error: deleteError, isDeleted } = useSelector(\r\n// //     (state) => state.product\r\n// //   );\r\n\r\n// //   const deleteProductHandler = (id) => {\r\n// //     dispatch(deleteProduct(id));\r\n// //   };\r\n\r\n//   useEffect(() => {\r\n//     if (error) {\r\n//       alert.error(error);\r\n//       dispatch(clearErrors());\r\n//     }\r\n\r\n//     // if (deleteError) {\r\n//     //   alert.error(deleteError);\r\n//     //   dispatch(clearErrors());\r\n//     // }\r\n\r\n//     // if (isDeleted) {\r\n//     //   alert.success(\"Product Deleted Successfully\");\r\n//     //   history.push(\"/admin/dashboard\");\r\n//     //   dispatch({ type: DELETE_PRODUCT_RESET });\r\n//     // }\r\n\r\n//     dispatch(getAdminProduct());\r\n//   }, [dispatch, alert, error]);\r\n\r\n//   const columns = [\r\n//     { field: \"id\", headerName: \"Product ID\", minWidth: 200, flex: 0.5 },\r\n\r\n//     {\r\n//       field: \"name\",\r\n//       headerName: \"Name\",\r\n//       minWidth: 350,\r\n//       flex: 1,\r\n//     },\r\n//     {\r\n//       field: \"stock\",\r\n//       headerName: \"Stock\",\r\n//       type: \"number\",\r\n//       minWidth: 150,\r\n//       flex: 0.3,\r\n//     },\r\n\r\n//     {\r\n//       field: \"price\",\r\n//       headerName: \"Price\",\r\n//       type: \"number\",\r\n//       minWidth: 270,\r\n//       flex: 0.5,\r\n//     },\r\n\r\n//     {\r\n//       field: \"actions\",\r\n//       flex: 0.3,\r\n//       headerName: \"Actions\",\r\n//       minWidth: 150,\r\n//       type: \"number\",\r\n//       sortable: false,\r\n//       renderCell: (params) => {\r\n//         return (\r\n//           <Fragment>\r\n//             <Link to={`/admin/product/${(params.row.id, \"id\")}`}>\r\n//               <EditIcon />\r\n//             </Link>\r\n\r\n//             <Button\r\n//             //   onClick={() =>\r\n//             //     deleteProductHandler(params.getValue(params.id, \"id\"))\r\n//             //   }\r\n//             >\r\n//               <DeleteIcon />\r\n//             </Button>\r\n//           </Fragment>\r\n//         );\r\n//       },\r\n//     },\r\n//   ];\r\n\r\n//   const rows = [];\r\n\r\n//   products &&\r\n//     products.forEach((item) => {\r\n//       rows.push({\r\n//         id: item._id,\r\n//         stock: item.Stock,\r\n//         price: item.price,\r\n//         name: item.name,\r\n//       });\r\n//     });\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={`ALL PRODUCTS - Admin`} />\r\n\r\n      <div className=\"dashboard\">\r\n        <SideBar />\r\n        <div className=\"productListContainer\">\r\n          <h1 id=\"productListHeading\">ALL PRODUCTS</h1>\r\n\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            className=\"productListTable\"\r\n            autoHeight\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductList;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAO,mBAAmB;AAC1B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,WAAW,EACXC,eAAe,EACfC,aAAa,QACR,6BAA6B;AACpC,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,OAAO,MAAM,eAAe;AACnC,SAASC,oBAAoB,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,WAAW,GAAGC,IAAA,IAAiB;EAAA,IAAhB;IAAEC;EAAQ,CAAC,GAAAD,IAAA;EAChC;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,oBACEF,OAAA,CAAClB,QAAQ;IAAAsB,QAAA,gBACPJ,OAAA,CAACN,QAAQ;MAACW,KAAK,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE3CT,OAAA;MAAKU,SAAS,EAAC,WAAW;MAAAN,QAAA,gBACxBJ,OAAA,CAACH,OAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXT,OAAA;QAAKU,SAAS,EAAC,sBAAsB;QAAAN,QAAA,gBACnCJ,OAAA;UAAIW,EAAE,EAAC,oBAAoB;UAAAP,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAE7CT,OAAA,CAAChB,QAAQ;UACP4B,IAAI,EAAEA,IAAK;UACXC,OAAO,EAAEA,OAAQ;UACjBC,QAAQ,EAAE,EAAG;UACbC,uBAAuB;UACvBL,SAAS,EAAC,kBAAkB;UAC5BM,UAAU;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEf,CAAC;AAACQ,EAAA,GAxHIhB,WAAW;AA0HjB,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}